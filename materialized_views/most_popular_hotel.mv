-- Удаление всех журналов и MV
declare
    TYPE command_list IS VARRAY(4) OF VARCHAR2(100);
    command  				command_list := command_list();
BEGIN
    command.EXTEND(4);
    command(1) := 'drop MATERIALIZED VIEW most_popular_hotel';
    command(2) := 'drop MATERIALIZED VIEW LOG ON hotel';
    command(3) := 'drop MATERIALIZED VIEW LOG ON country';
    command(4) := 'drop MATERIALIZED VIEW LOG ON booking';
    FOR i IN 1..command.count LOOP
        BEGIN
            EXECUTE IMMEDIATE command(i);
        EXCEPTION WHEN others THEN NULL;
        END;
    END LOOP;
EXCEPTION WHEN others THEN NULL;
END;

-- Cоздаём журнал материализованного представления для таблиц hotel, country, booking.
CREATE MATERIALIZED VIEW LOG ON hotel
WITH ROWID, SEQUENCE (hotel_id, hotel_name, country_id) INCLUDING NEW VALUES;

CREATE MATERIALIZED VIEW LOG ON country
WITH ROWID, SEQUENCE (country_id, country_name) INCLUDING NEW VALUES;

CREATE MATERIALIZED VIEW LOG ON booking
WITH ROWID, SEQUENCE (stays_in_nights, hotel_id) INCLUDING NEW VALUES;

-- Создаём материализованное представление
CREATE MATERIALIZED VIEW most_popular_hotel
    BUILD IMMEDIATE
    REFRESH ON COMMIT FAST
    AS
        select
            c.country_name country,
            h.hotel_name hotel,
            DENSE_RANK() OVER (PARTITION BY c.country_name ORDER BY h.hotel_name) rank
        from hotel h
            join country c on c.country_id = h.country_id
            join booking b on b.hotel_id = h.hotel_id

--        select
--            h.hotel_name hotel,
--            c.country_name country,
--            sum(b.stays_in_nights) sum_nights
--            --DENSE_RANK() OVER (PARTITION BY c.country_name ORDER BY h.hotel_name)
--        from hotel h
--            join country c on c.country_id = h.country_id
--            join booking b on b.hotel_id = h.hotel_id
--        group by h.hotel_name, c.country_name;
